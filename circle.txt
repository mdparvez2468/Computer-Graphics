#include<GL/gl.h>
#include <GL/glut.h>

int rad,x,y,a,b,h;
bool SE,E;

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.9, 0.4, 0.0);
    a=1000;
    b=1000;
    x=0;
    rad=50;
    y=rad;
    h=1-rad;
    glBegin(GL_POLYGON);

    glVertex3i(x+b,y+b,0);


    if(h>=0)
    {
        SE=true;
        E=false;
    }
    else

    {
        E=true;
        SE=false;

    }

    while(y>=x)
    {

        if(SE)
        {

            h=h+5+2*(x-y);


            if(h>=0)
    {
        SE=true;
        E=false;
    }
    else

    {
        E=true;
        SE=false;

    }

    x++;
    y--;
    glVertex3f(x+a, y+b ,0.0);

           glVertex3f(y+a, x+b, 0.0);
           glVertex3f(-y+a, x+b, 0.0);
           glVertex3f(-x+a, -y+b, 0.0);
           glVertex3f(-y+a, -x+b, 0.0);
           glVertex3f(y+a,-x+b , 0.0);
           glVertex3f(x+a, -y+b, 0.0);
           glVertex3f(x+a, y+b, 0.0);
             glVertex3f(-x+a, y+b, 0.0);
        }



        if(E)
        {

            h=h+3+2*x;
            if(h>=0)
    {
        SE=true;
        E=false;
    }
    else

    {
        E=true;
        SE=false;

    }
    x++;
    glVertex3f(x+a, y+b,0.0);

           glVertex3i(y+a, x+b, 0.0);
          glVertex3i(-y+a, x+b, 0.0);
           glVertex3i(-x+a, -y+b, 0.0);
           glVertex3i(-y+a, -x+b, 0.0);
           glVertex3i(y+a,-x+b , 0.0);
           glVertex3i(x+a, -y+b, 0.0);
           glVertex3i(x+a, y+b, 0.0);
             glVertex3i(-x+a, y+b, 0.0);
        }

    }




    glEnd();

    glColor3f(0.9764705882352941, 0.4705882352941176, 0.0196078431372549);
    glBegin(GL_LINES);
    glVertex3i(1000,1000,0);
    glVertex3i(1000,950,0);


    glEnd();
    glFlush();
}

void init(void)
{
glClearColor(0.0,1.0, 0.9,0.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0, 1200.0, 0, 1200.0);
}

int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(1000, 600);
glutInitWindowPosition(100, 100);
glutCreateWindow("Circle");

glutDisplayFunc(display);

init();
glutMainLoop();
return 0;
}

