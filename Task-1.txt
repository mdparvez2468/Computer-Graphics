
#include <GL/gl.h>
#include <GL/glut.h>


void display(void)
{
glClear (GL_COLOR_BUFFER_BIT);

glColor3f (1.0, 1.0, 1.0);


	glBegin(GL_QUADS); //Begin quadrilateral coordinates

	glColor3f (0.5, 0.5, 0.7);
	glVertex3f(0.7f, 0.5f, 0.0f);
	glVertex3f(17.0f, 0.5f, 0.0f);
	glVertex3f(17.0f, 8.5f, 0.0f);
    glVertex3f(0.7f, 8.5f, 0.0f);

	glEnd();

	glBegin(GL_QUADS); //Begin quadrilateral coordinates

	glColor3f (0.5, 0.3, 0.2);
	glVertex3f(5.0f, 0.5f, 0.0f);
	glVertex3f(9.0f, 0.5f, 0.0f);
	glVertex3f(9.0f, 7.0f, 0.0f);
    glVertex3f(5.0f, 7.0f, 0.0f);

	glEnd();

	glBegin(GL_QUADS); //Begin quadrilateral coordinates

	glColor3f (0.5, 0.3, 0.2);
	glVertex3f(5.0f, 7.4f, 0.0f);
	glVertex3f(9.0f, 7.4f, 0.0f);
	glVertex3f(9.0f, 8.0f, 0.0f);
    glVertex3f(5.0f, 8.0f, 0.0f);

	glEnd();



    glBegin(GL_QUADS); //Begin quadrilateral coordinates

	glColor3f (1.0, 0.0, 0.0);
	glVertex3f(11.0f, 2.0f, 0.0f);
	glVertex3f(16.5f, 2.0f, 0.0f);
	glVertex3f(16.5f, 6.5f, 0.0f);
    glVertex3f(11.0f, 6.5f, 0.0f);

	glEnd();

	glBegin(GL_QUADS); //Begin quadrilateral coordinates

	glColor3f (1.0, 0.0, 0.0);
	glVertex3f(11.0f, 7.0f, 0.0f);
	glVertex3f(16.5f, 7.0f, 0.0f);
	glVertex3f(16.5f, 8.0f, 0.0f);
    glVertex3f(11.0f, 8.0f, 0.0f);

	glEnd();





	glBegin(GL_TRIANGLES); //Begin triangle coordinates

    glColor3f (1.0, 0.3, 1.0);
	glVertex3f(-0.5f, 8.5f, 0.0f);
	glVertex3f(18.0f, 8.5f, 0.0f);
	glVertex3f(09.0f, 18.0f, 0.0f);
	glEnd();





glFlush ();
}
void init (void)
{
glClearColor (1.0, 0.5, 0.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(-1.0, 20, -1.0, 20, -10.0, 10.0);
}

int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (800, 800);
glutInitWindowPosition (100, 100);
glutCreateWindow ("Md Parvez");
init ();
glutDisplayFunc(display);
glutMainLoop();
return 0;
}
